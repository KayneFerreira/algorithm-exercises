#
# 2 - Even Fibonacci Numbers
#
'''
    Each new term in the Fibonacci sequence is generated by adding the
    previous two terms. By starting with 1 and 2, the first 10 terms 
    will be:
        1, 2, 3, 5, 8, 13, 21, 34, 55, 89,...
    
    By considering the terms in the Fibonacci sequence whose values do
    not exceed four million, find the sum of the even-valued terms.
'''

def generate_fibonacci_number_list(limit):
    fibonacci = [1, 2]
    result = 0
    while True:
        pos1 = len(fibonacci)-1
        pos2 = len(fibonacci)-2
        result = fibonacci[pos1] + fibonacci[pos2]
        if result < limit:
            fibonacci.append(result)
        else:
            break
    return fibonacci


def sum_fibonacci_list(list):
    sum = 0
    for value in list:
        sum += value
    return sum


def main():
    passed_value = 100
    # passed_value = 4000000
    list = generate_fibonacci_number_list(passed_value)
    sum = sum_fibonacci_list(list)

    print(f"The fibonacci list is as follows: ")
    print(list)
    print(f"\nThe sum of all values in Fibonacci list is: {sum}")
    

# start application
if __name__ == "__main__":
    main()
